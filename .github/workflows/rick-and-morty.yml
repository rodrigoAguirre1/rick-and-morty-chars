name: Build and Deploy the Rick and Morty Web
on:
  push:
    branches: [ 'deploy' ]
  pull_request:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs: 
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # npm run build 

      - name: Build
        working-directory: react-web
        run: npm i && npm run build
        if: github.event_name == 'push'

      # Terraform code

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: cv-terraform-tfstate-role 
          aws-region: ${{ secrets.AWS_REGION }}
        if: github.event_name == 'pull_request'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        if: github.event_name == 'pull_request'

      - name: Terraform fmt
        working-directory: terraform
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        if: github.event_name == 'pull_request'

      - name: Terraform Init
        if: github.event_name == 'pull_request'
        working-directory: terraform
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        working-directory: terraform
        id: validate
        run: terraform validate -no-color
        if: github.event_name == 'pull_request'

      - name: Terraform Plan
        working-directory: terraform
        env:
          AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        id: plan
        run: terraform plan -no-color -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
        if: github.event_name == 'pull_request'
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
            </details>
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false